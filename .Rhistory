LETTERS
letters
month.name
print(v1)
month.abb
pi
LETTERS;letters;month.name;month.abb;pi
LETTERS[1]; LETTERS[c(3,4,5)]
LETTERS[3:5]; LETTERS[5:3]
LETTERS[-1]; LETTERS[c(-2,-4)] # 빼고, 제외하고
length(LETTERS)
length(month.name)
length(pi)
rep(1, 100)
rep(1:3, 5)
rep(1:3, times=5) # 키워드 파라미
rep(1:3, each=5)
?rep  #help()
x <- c(10,20,7,14,15)
class(x)
rev(x)
rev(x)
range(x)
sort(x)
sort(x, decreasing = TRUE)
sort(x, decreasing = T)
order(x)
x <- c(10,20,7,14,15)
#x <- sort(x)
order(x)
x[3] <- 20
x
x + 1
x <- x + 1
max(x);min(x);mean(x);sum(x)
summary(x)
x
installed.packages()
search()
if(!file.exists("output")) {
cat("워킹디렉토리에 output 폴더 생성함\n")
dir.create("output")
}
install.packages("rvest")
install.packages("XML")
install.packages("httr")
install.packages("jsonlite")
install.packages("rtweet")
library(rvest)
library(XML)
library(httr)
installed.packages()
search()
if(!file.exists("output")) {
cat("워킹디렉토리에 output 폴더 생성함\n")
dir.create("output")
}
install.packages("rvest")
install.packages("XML")
getwd()
install.packages("rvest")
install.packages("XML")
install.packages("XML")
install.packages("XML")
.libPaths()
library(rvest)
install.packages("rvest")
library(rvest)
install.packages("rvest")
library(rvest)
# 확장(추가) 패키지의 설치작업은 하는 일이 많고 좀... 민감함...(^^)
# 가급적 하나하나 실행시키숑~~
install.packages("rvest")
# 확장(추가) 패키지의 설치작업은 하는 일이 많고 좀... 민감함...(^^)
# 가급적 하나하나 실행시키숑~~
install.packages("rvest")
library(rvest)
# 확장(추가) 패키지의 설치작업은 하는 일이 많고 좀... 민감함...(^^)
# 가급적 하나하나 실행시키숑~~
install.packages("rvest")
# 확장(추가) 패키지의 설치작업은 하는 일이 많고 좀... 민감함...(^^)
# 가급적 하나하나 실행시키숑~~
install.packages("rvest")
library(rvest)
library(rvest)
url<- "https://comic.naver.com/genre/bestChallenge?&page=1"
text <- read_html(url)
text
nodes1 <- html_nodes(text, ".challengeTitle")
comic.name <- html_text(nodes1)
comic.name
comic.name <- gsub("[[:cntrl:]]", "", comic.name)
comic.name
nodes2 <- html_nodes(text, ".summary")
comic.summary <- html_text(nodes2)
comic.summary
nodes3 <- html_nodes(text, ".rating_type > strong")
comic.grade <- html_text(nodes3)
comic.grade
navercomic1 <- data.frame(comic.name, comic.summary, comic.grade)
View(navercomic1)
library(rvest)
url<- "https://comic.naver.com/genre/bestChallenge?&page=1"
text <- read_html(url)
text
nodes1 <- html_nodes(text, ".challengeTitle", trim=T)
comic.name <- html_text(nodes1)
comic.name
comic.name <- gsub("[[:cntrl:]]", "", comic.name)
comic.name
nodes2 <- html_nodes(text, ".summary")
comic.summary <- html_text(nodes2)
comic.summary
nodes3 <- html_nodes(text, ".rating_type > strong")
comic.grade <- html_text(nodes3)
comic.grade
navercomic1 <- data.frame(comic.name, comic.summary, comic.grade)
View(navercomic1)
library(rvest)
url<- "https://comic.naver.com/genre/bestChallenge?&page=1"
text <- read_html(url)
text
nodes1 <- html_nodes(text, "h6 > a", trim=T)
comic.name <- html_text(nodes1)
comic.name
comic.name <- gsub("[[:cntrl:]]", "", comic.name)
comic.name
nodes2 <- html_nodes(text, ".summary")
comic.summary <- html_text(nodes2)
comic.summary
nodes3 <- html_nodes(text, ".rating_type > strong")
comic.grade <- html_text(nodes3)
comic.grade
navercomic1 <- data.frame(comic.name, comic.summary, comic.grade)
View(navercomic1)
text <- read_html(url)
text
nodes1 <- html_nodes(text, ".challengeTitle", trim=T)
comic.name <- html_text(nodes1)
comic.name
comic.name <- gsub("[[:cntrl:]]", "", comic.name)
comic.name
nodes2 <- html_nodes(text, ".summary")
comic.summary <- html_text(nodes2)
comic.summary
nodes3 <- html_nodes(text, ".rating_type > strong")
comic.grade <- html_text(nodes3)
comic.grade
navercomic1 <- data.frame(comic.name, comic.summary, comic.grade)
View(navercomic1)
library(rvest)
url<- "https://comic.naver.com/genre/bestChallenge?&page=1"
text <- read_html(url)
text
nodes1 <- html_nodes(text, ".challengeTitle", trim=T)
comic.name <- html_text(nodes1)
comic.name
nodes2 <- html_nodes(text, ".summary")
comic.summary <- html_text(nodes2)
comic.summary
nodes3 <- html_nodes(text, ".rating_type > strong")
comic.grade <- html_text(nodes3)
comic.grade
navercomic1 <- data.frame(comic.name, comic.summary, comic.grade)
View(navercomic1)
url <- "https://comic.naver.com/genre/bestChallenge.nhn"
webtoon <- read_html(url)
comic.name <- html_text(html_nodes(webtoon, "h6 > a"), trim=T)
comic.name
comic.summary <- html_text(html_nodes(webtoon, "div.challengeInfo > div.summary"))
comic.summary
comic.grade <- html_text(html_nodes(webtoon, "div.challengeInfo > div.rating_type > strong"))
comic.grade
comic.df <- data.frame(comic.name, comic.summary, comic.grade)
View(comic.df)
url <- "https://comic.naver.com/genre/bestChallenge.nhn"
webtoon <- read_html(url)
comic.name <- html_text(html_nodes(webtoon, "h6 > a"), trim=T)
comic.name
comic.summary <- html_text(html_nodes(webtoon, "div.challengeInfo > div.summary"))
comic.summary
comic.grade <- html_text(html_nodes(webtoon, "div.challengeInfo > div.rating_type > strong"))
comic.grade
comic.df <- data.frame(comic.name, comic.summary, comic.grade)
View(comic.df)
library(rvest)
url<- "https://comic.naver.com/genre/bestChallenge?&page=1"
text <- read_html(url)
text
nodes1 <- html_nodes(text, ".challengeTitle", trim=T)
comic.name <- html_text(nodes1)
comic.name
comic.name <- gsub("[[:cntrl:]]", "", comic.name)
comic.name
nodes2 <- html_nodes(text, ".summary")
comic.summary <- html_text(nodes2)
comic.summary
nodes3 <- html_nodes(text, ".rating_type > strong")
comic.grade <- html_text(nodes3)
comic.grade
navercomic1 <- data.frame(comic.name, comic.summary, comic.grade)
View(navercomic1)
library(rvest)
site<- "https://comic.naver.com/genre/bestChallenge?&page="
text <- NULL
navercomic <- NULL
for(i in 1: 50) {
url <- paste(site, i, sep="")
print(url)
text <- read_html(url)
comic.name <- NULL
comic.summary <- NULL
comic.grade  <- NULL
for (index in 1:24) {
# comic.name
node <- html_node(text, paste0("#content > div:nth-child(5) > table > tbody > tr:nth-child(1) > td:nth-child(", index, ") > div.challengeInfo > h6"))
challengeInfo <- html_text(node)
comic.name[index] <- challengeInfo
# comic.summary
node <- html_nodes(text, xpath=paste0('//*[@id="content"]/div[4]/table/tbody/tr[1]/td[', index,"]/div[2]/div[1]"))
node <- html_text(node, trim=TRUE)
#print(node)
review = node[4]
comic.summary <- append(comic.summary, review)
# comic.grade
node <- html_node(text, paste0("#content > div:nth-child(5) > table > tbody > tr:nth-child(1) > td:nth-child(", index,") > div.challengeInfo > div.rating_type > strong"))
point <- html_text(node)
comic.grade  <- c(comic.grade , point)
}
page <- data.frame(comic.name, comic.summary, comic.grade)
navercomic <- rbind(navercomic, page)
}
View(navercomic)
str(navercomic)
install.packages("Rselenium")
library(RSelenium)
install.packages("selenium")
paste0("I'm","Duli","!!")
v <- c(10, 20, 30, 40); v[-1]
10:15
c(10, 11, 12, 13, 14, 15)
rep(10:15, 1)
seq(15,10)
library(RSelenium)
remDr <- remoteDriver(remoteServerAddr = "localhost", port = 4445, browserName = "chrome")
remDr$open()
remDr$navigate("http://gs25.gsretail.com/gscvs/ko/products/event-goods")
# 2+1 행사 클릭
btn1css <- "#TWO_TO_ONE"
btn1Page <- remDr$findElements(using = 'css selector', btn1css)
sapply(btn1Page, function(x) {x$clickElement()})
Sys.sleep(3)
#
gs_goods = NULL
endFlag <- FALSE
page <- 1
#
repeat {
for(index in 1:8) {
goodsnameCss <- paste0("#contents > div.cnt > div.cnt_section.mt50 > div > div > div:nth-child(5) > ul > li:nth-child(", index, ") > div > p.tit")
goodsnamenodes <- remDr$findElements(using='css selector',  goodsnameCss)
goodsname <- sapply(goodsnamenodes, function(x) {x$getElementText()})
if (length(goodsname) == 0) {
cat("종료\n")
endFlag <- TRUE
break
}
goodspriceCss <- paste0("#contents > div.cnt > div.cnt_section.mt50 > div > div > div:nth-child(5) > ul > li:nth-child(", index, ") > div > p.price > span")
goodspricenodes <- remDr$findElements(using = "css selector", goodspriceCss)
goodsprice <- sapply(goodspricenodes, function(x) {x$getElementText()})
goodsprice <- gsub("[,원]","", goodsprice)
df <- data.frame(goodsname = unlist(goodsname), goodsprice = unlist(goodsprice))
gs_goods <- rbind(gs_goods, df)
}
if(endFlag)
break;
# next page
if(page == 10){
page <- 1
nextPagecss <- "#contents > div.cnt > div.cnt_section.mt50 > div > div > div:nth-child(5) > div > a.next"
}
else{
page <- page+1;
nextPagecss <- paste0("#contents > div.cnt > div.cnt_section.mt50 > div > div > div:nth-child(5) > div > span > a:nth-child(", page, ")")
}
nextPageLink<-remDr$findElements(using='css selector', nextPagecss)
sapply(nextPageLink, function(x) {x$clickElement()})
Sys.sleep(3)
print(page)
}
View(gs_goods)
write.csv(gs_goods, "output/gs25_twotoone.csv")
library(RSelenium)
